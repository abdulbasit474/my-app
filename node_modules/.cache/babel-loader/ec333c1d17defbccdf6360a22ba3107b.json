{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Development/phase3/movie-app/src/MovieDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Reviews from './Reviews';\nimport './Review.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieDetails({\n  category\n}) {\n  _s();\n\n  console.log(category);\n  const getPath = window.location.pathname;\n  const getPathId = parseInt(getPath.split(\"/\").pop()); // debugger\n\n  console.log(getPath);\n  const [getMovie, setGetMovie] = useState([]); // console.log(window.location.pathname)\n\n  useEffect(() => {\n    fetch(`http://localhost:9292${getPath}`).then(resp => resp.json()).then(data => setGetMovie(data));\n  }, []); // const { id } = useParams()\n  // console.log(id);\n  // console.log(props.location)\n\n  const baseImageUrl = \"https://image.tmdb.org/t/p/original/\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"black\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shadow\",\n      style: {\n        marginTop: \"3rem\",\n        backgroundColor: \"white\",\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"centerText\",\n        children: (getMovie === null || getMovie === void 0 ? void 0 : getMovie.name) || (getMovie === null || getMovie === void 0 ? void 0 : getMovie.title) || (getMovie === null || getMovie === void 0 ? void 0 : getMovie.original_name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"center\",\n        src: `${baseImageUrl}${getMovie.poster_path}`,\n        alt: \"poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"centerText\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"About \", (getMovie === null || getMovie === void 0 ? void 0 : getMovie.name) || (getMovie === null || getMovie === void 0 ? void 0 : getMovie.title) || (getMovie === null || getMovie === void 0 ? void 0 : getMovie.original_name)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 44\n        }, this), getMovie.overview]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"center\",\n        src: `${baseImageUrl}${getMovie.backdrop_path}`,\n        alt: \"poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Reviews, {\n        movieId: getPathId,\n        category: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieDetails, \"OOkAbVeNOSJscb7XeOXdPhH/w9o=\");\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/home/abdul/Development/phase3/movie-app/src/MovieDetails.js"],"names":["React","useState","useEffect","Reviews","MovieDetails","category","console","log","getPath","window","location","pathname","getPathId","parseInt","split","pop","getMovie","setGetMovie","fetch","then","resp","json","data","baseImageUrl","backgroundColor","marginTop","position","name","title","original_name","poster_path","overview","backdrop_path"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Reviews from './Reviews';\nimport './Review.css'\n\nfunction MovieDetails({ category }) {\n    console.log(category)\n\n    const getPath = window.location.pathname\n    const getPathId = parseInt(getPath.split(\"/\").pop())\n\n\n    // debugger\n    console.log(getPath)\n    const [getMovie, setGetMovie] = useState([])\n    // console.log(window.location.pathname)\n    useEffect(() => {\n        fetch(`http://localhost:9292${getPath}`)\n            .then(resp => resp.json())\n            .then(data => setGetMovie(data))\n    }, [])\n\n\n    // const { id } = useParams()\n    // console.log(id);\n    // console.log(props.location)\n    const baseImageUrl = \"https://image.tmdb.org/t/p/original/\"\n    return (\n        <div style={{ backgroundColor: \"black\" }}>\n            <div className=\"shadow\" style={{ marginTop: \"3rem\", backgroundColor: \"white\", position: \"relative\" }}>\n                <h1 className=\"centerText\">{getMovie?.name || getMovie?.title || getMovie?.original_name}</h1>\n                <img className=\"center\" src={`${baseImageUrl}${getMovie.poster_path}`} alt=\"poster\" ></img>\n\n                <br />\n                <p className=\"centerText\"> <h3>About {getMovie?.name || getMovie?.title || getMovie?.original_name}</h3>{getMovie.overview}</p>\n                <br />\n                <img className=\"center\" src={`${baseImageUrl}${getMovie.backdrop_path}`} alt=\"poster\" ></img>\n            </div>\n            <div>\n                <Reviews movieId={getPathId} category={category} />\n            </div>\n        </div>\n    )\n}\n\nexport default MovieDetails\n\n"]},"metadata":{},"sourceType":"module"}