{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Development/phase3/movie-app/src/Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments(_ref) {\n  _s();\n  let {\n    categoryComment,\n    mov_id,\n    handleAddComment\n  } = _ref;\n  console.log(handleAddComment);\n  const [newComment, setNewComment] = useState(\"\");\n  console.log(newComment);\n  console.log(categoryComment);\n  function handleSubmit(e) {\n    // debugger;\n    e.preventDefault();\n    fetch(`http://localhost:9292/${categoryComment}`, {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        comment: newComment,\n        likes: 0,\n        mov_id: mov_id\n      })\n    }).then(resp => resp.json()).then(addcomment => {\n      handleAddComment(addcomment);\n      console.log(addcomment);\n      e.target.reset();\n    });\n    setNewComment(\" \");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"comment\",\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Comments, \"hdmU//CB++ZG3hy6Wzlv3cAh5aM=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Comments","_ref","_s","categoryComment","mov_id","handleAddComment","console","log","newComment","setNewComment","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","comment","likes","then","resp","json","addcomment","target","reset","children","onSubmit","type","name","onChange","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abdul/Development/phase3/movie-app/src/Comments.js"],"sourcesContent":["import React, { useState } from 'react'\n\nfunction Comments({ categoryComment, mov_id, handleAddComment }) {\n\n    console.log(handleAddComment)\n    const [newComment, setNewComment] = useState(\"\")\n    console.log(newComment)\n    console.log(categoryComment);\n    function handleSubmit(e) {\n        // debugger;\n        e.preventDefault();\n        fetch(`http://localhost:9292/${categoryComment}`, {\n            method: \"post\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                comment: newComment,\n                likes: 0,\n                mov_id: mov_id\n            })\n        }).then(resp => resp.json())\n            .then(addcomment => {\n                handleAddComment(addcomment)\n                console.log(addcomment)\n                e.target.reset();\n            })\n        setNewComment(\" \");\n    }\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"comment\" onChange={(e) => setNewComment(e.target.value)}></input>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Comments\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,QAAQA,CAAAC,IAAA,EAAgD;EAAAC,EAAA;EAAA,IAA/C;IAAEC,eAAe;IAAEC,MAAM;IAAEC;EAAiB,CAAC,GAAAJ,IAAA;EAE3DK,OAAO,CAACC,GAAG,CAACF,gBAAgB,CAAC;EAC7B,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChDS,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;EACvBF,OAAO,CAACC,GAAG,CAACJ,eAAe,CAAC;EAC5B,SAASO,YAAYA,CAACC,CAAC,EAAE;IACrB;IACAA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,KAAK,CAAE,yBAAwBV,eAAgB,EAAC,EAAE;MAC9CW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,OAAO,EAAEX,UAAU;QACnBY,KAAK,EAAE,CAAC;QACRhB,MAAM,EAAEA;MACZ,CAAC;IACL,CAAC,CAAC,CAACiB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,UAAU,IAAI;MAChBnB,gBAAgB,CAACmB,UAAU,CAAC;MAC5BlB,OAAO,CAACC,GAAG,CAACiB,UAAU,CAAC;MACvBb,CAAC,CAACc,MAAM,CAACC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC;IACNjB,aAAa,CAAC,GAAG,CAAC;EACtB;EACA,oBACIV,OAAA;IAAA4B,QAAA,eACI5B,OAAA;MAAM6B,QAAQ,EAAElB,YAAa;MAAAiB,QAAA,gBACzB5B,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,QAAQ,EAAGpB,CAAC,IAAKF,aAAa,CAACE,CAAC,CAACc,MAAM,CAACO,KAAK;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1FrC,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAAClC,EAAA,CAnCQF,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAqCjB,eAAeA,QAAQ;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}