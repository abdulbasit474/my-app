{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Development/phase3/movie-app/src/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport movieTrailer from 'movie-trailer';\nimport { Link } from \"react-router-dom\";\nimport Comments from './Comments';\nimport YouTube from 'react-youtube';\nimport \"./Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Row(_ref) {\n  _s();\n  let {\n    title,\n    fetchUrl,\n    isLargeRow,\n    categoryLink,\n    categoryComment\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [movieClick, setMovieClick] = useState(false);\n  const [movieId, setMovieId] = useState(0);\n  const [displayComments, setDisplayComments] = useState(false);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [displayMovieDetails, setDisplayMovieDetails] = useState(false);\n  useEffect(() => {\n    fetch(`${fetchUrl}`).then(resp => resp.json()).then(data => setMovies(data));\n  }, [fetchUrl]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  function handleAddComment(comment) {\n    // debugger;\n    setComments([...comments, comment]);\n  }\n  const baseImageUrl = \"https://image.tmdb.org/t/p/original/\";\n  function handleClick(moviename) {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer(moviename || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get(\"v\"));\n      }).catch(() => alert(\" Sorry, No trailer found for this movie\"));\n    }\n    setDisplayComments(false);\n  }\n  function handleReview(id) {\n    movieId === id && setDisplayComments(!displayComments);\n  }\n  function handleImageClick(movie_id) {\n    setMovieId(movie_id);\n    setMovieClick(!movieClick);\n  }\n  function viewComments() {\n    fetch(`http://localhost:9292/${categoryComment}`).then(resp => resp.json()).then(data => {\n      setComments(data);\n      console.log(data);\n    });\n    setDisplayMovieDetails(!displayMovieDetails);\n  }\n\n  // console.log(getMovie)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row__posters\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n            src: `${baseImageUrl}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n            alt: movie.name,\n            onClick: () => handleImageClick(movie.id)\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), movieId === movie.id && movieClick && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"mov__button\",\n              onClick: () => handleClick((movie === null || movie === void 0 ? void 0 : movie.original_name) || (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name)),\n              children: `Play ${(movie === null || movie === void 0 ? void 0 : movie.original_name) || (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name)} Trailer`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 70\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"mov__button\",\n              onClick: () => handleReview(movie.id),\n              children: \"Leave Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), displayComments && movie.id === movieId && /*#__PURE__*/_jsxDEV(Comments, {\n              comments: comments,\n              handleAddComment: handleAddComment,\n              categoryComment: categoryComment,\n              style: {\n                marginTop: \"10rem\"\n              },\n              mov_id: movieId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 77\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `${categoryLink}/${movie.id}`,\n              href: `${categoryLink}/${movie.id}`,\n              className: \"mov__button\",\n              style: {\n                textDecoration: \"none\",\n                paddingTop: \"1rem\"\n              },\n              onClick: viewComments,\n              children: \"View movie Details and Reviews\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), \" \"]\n          }, void 0, true)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: trailerUrl,\n        opts: opts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(Row, \"ztel8+luA5XpYjTfSBnNSc5haEw=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","movieTrailer","Link","Comments","YouTube","jsxDEV","_jsxDEV","Fragment","_Fragment","Row","_ref","_s","title","fetchUrl","isLargeRow","categoryLink","categoryComment","movies","setMovies","movieClick","setMovieClick","movieId","setMovieId","displayComments","setDisplayComments","trailerUrl","setTrailerUrl","comments","setComments","displayMovieDetails","setDisplayMovieDetails","fetch","then","resp","json","data","opts","height","width","playerVars","autoplay","handleAddComment","comment","baseImageUrl","handleClick","moviename","url","urlParams","URLSearchParams","URL","search","get","catch","alert","handleReview","id","handleImageClick","movie_id","viewComments","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","src","poster_path","backdrop_path","alt","name","onClick","original_name","style","marginTop","mov_id","to","href","textDecoration","paddingTop","videoId","_c","$RefreshReg$"],"sources":["/home/abdul/Development/phase3/movie-app/src/Row.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport movieTrailer from 'movie-trailer'\nimport { Link } from \"react-router-dom\"\nimport Comments from './Comments';\nimport YouTube from 'react-youtube';\nimport \"./Row.css\";\n\nfunction Row({ title, fetchUrl, isLargeRow, categoryLink, categoryComment }) {\n    const [movies, setMovies] = useState([])\n    const [movieClick, setMovieClick] = useState(false)\n    const [movieId, setMovieId] = useState(0);\n    const [displayComments, setDisplayComments] = useState(false)\n    const [trailerUrl, setTrailerUrl] = useState(\"\")\n    const [comments, setComments] = useState([])\n    const [displayMovieDetails, setDisplayMovieDetails] = useState(false)\n\n\n    useEffect(() => {\n        fetch(`${fetchUrl}`)\n            .then(resp => resp.json())\n            .then(data => setMovies(data))\n    }, [fetchUrl])\n\n\n    const opts = {\n        height: \"390\",\n        width: \"100%\",\n        playerVars: {\n            autoplay: 1,\n        },\n    }\n\n    function handleAddComment(comment) {\n        // debugger;\n        setComments([...comments, comment])\n    }\n    const baseImageUrl = \"https://image.tmdb.org/t/p/original/\"\n\n    function handleClick(moviename) {\n        if (trailerUrl) {\n            setTrailerUrl(\"\")\n        }\n        else {\n            movieTrailer(moviename || \"\")\n                .then(url => {\n                    const urlParams = new URLSearchParams(new URL(url).search)\n                    setTrailerUrl(urlParams.get(\"v\"))\n                }).catch(() => alert(\" Sorry, No trailer found for this movie\"));\n        }\n        setDisplayComments(false)\n    }\n\n    function handleReview(id) {\n        movieId === id && setDisplayComments(!displayComments)\n    }\n    function handleImageClick(movie_id) {\n        setMovieId(movie_id)\n        setMovieClick(!movieClick)\n    }\n\n    function viewComments() {\n        fetch(`http://localhost:9292/${categoryComment}`)\n            .then(resp => resp.json())\n            .then(data => {\n                setComments(data)\n                console.log(data)\n            })\n        setDisplayMovieDetails(!displayMovieDetails)\n    }\n\n    // console.log(getMovie)\n    return (\n        <div>\n            <div className=\"row\">\n                <h2>{title}</h2>\n                <div className=\"row__posters\">\n                    {movies.map(movie => (\n                        <>\n                            <img key={movie.id}\n                                className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                                src={`${baseImageUrl}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\n                                alt={movie.name}\n                                onClick={() => handleImageClick(movie.id)}\n                            />\n                            {movieId === movie.id && movieClick && <><button className=\"mov__button\" onClick={() => handleClick(movie?.original_name || movie?.title || movie?.name)}>{`Play ${movie?.original_name || movie?.title || movie?.name} Trailer`}</button>\n                                <button className=\"mov__button\" onClick={() => handleReview(movie.id)}>Leave Review</button>\n                                {displayComments && movie.id === movieId && <Comments comments={comments} handleAddComment={handleAddComment} categoryComment={categoryComment} style={{ marginTop: \"10rem\" }} mov_id={movieId} />}\n                                <Link to={`${categoryLink}/${movie.id}`} href={`${categoryLink}/${movie.id}`} className=\"mov__button\" style={{ textDecoration: \"none\", paddingTop: \"1rem\" }} onClick={viewComments}>\n                                    View movie Details and Reviews</Link> </>}\n\n\n                        </>\n                    ))}\n                </div>\n                {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n            </div >\n        </div >\n    )\n}\n\nexport default Row\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}