{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Development/phase3/movie-app/src/Reviews.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport ReviewLikes from './ReviewLikes';\nimport moment from 'moment';\nimport './Review.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Reviews({\n  movieId,\n  category\n}) {\n  _s();\n\n  const [comment, setComment] = useState([]);\n  const [showComments, setShowComments] = useState(false);\n  const [likes, setLikes] = useState(0);\n  console.log(movieId);\n  const getName = category.split(\"/\").pop().slice(0, -9) + \"_id\"; // debugger;\n\n  console.log(getName);\n  useEffect(() => {\n    fetch(`http://localhost:9292${category}`).then(resp => resp.json()).then(data => setComment(data));\n    setShowComments(!showComments);\n  }, []); // function handleReviews() {\n  //     fetch(`http://localhost:9292${category}`)\n  //         .then(resp => resp.json())\n  //         .then(data => setComment(data))\n  //     setShowComments(!showComments)\n  // }\n\n  console.log(comment);\n  let commentFilter;\n\n  if (getName === \"netflix_original_id\") {\n    commentFilter = comment.filter(x => x.netflix_original_id === movieId);\n  } else if (getName === \"trending_id\") {\n    commentFilter = comment.filter(x => x.trending_id === movieId);\n  } else if (getName === \"romance_id\") {\n    commentFilter = comment.filter(x => x.romance_id === movieId);\n  } else if (getName === \"top_rated_id\") {\n    commentFilter = comment.filter(x => x.top_rated_id === movieId);\n  } else if (getName === \"action_id\") {\n    commentFilter = comment.filter(x => x.action_id === movieId);\n  } else if (getName === \"horror_id\") {\n    commentFilter = comment.filter(x => x.horror_id === movieId);\n  } else if (getName === \"documentary_id\") {\n    commentFilter = comment.filter(x => x.documentary_id === movieId);\n  } else if (getName === \"comedy_id\") {\n    commentFilter = comment.filter(x => x.comedy_id === movieId);\n  } // debugger\n\n\n  function handleUpdate(updatedComment) {\n    const updated = comment.filter(x => x.id === updatedComment.id ? updatedComment : x);\n    setComment(updated);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shadow\",\n    style: {\n      backgroundColor: \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"centerText\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        height: \"5px\",\n        color: \"black\",\n        backgroundColor: \"black\",\n        width: \"50%\",\n        marginLeft: \"25%\",\n        marginRight: \"25% !important\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), commentFilter.length == 0 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"centerText\",\n      children: \"No comments on this yet!! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 42\n    }, this) : commentFilter.map(x => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"centerText\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Anonymous-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 58\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: x.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 78\n          }, this)]\n        }, x.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"centerText\",\n          children: [moment(x.created_at).format('MMMM Do YYYY'), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReviewLikes, {\n          comment: x,\n          onUpdate: handleUpdate,\n          category: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Reviews, \"Pwu1SLryJJHLecLX029pU6tnYjw=\");\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["/home/abdul/Development/phase3/movie-app/src/Reviews.js"],"names":["React","useEffect","useState","ReviewLikes","moment","Reviews","movieId","category","comment","setComment","showComments","setShowComments","likes","setLikes","console","log","getName","split","pop","slice","fetch","then","resp","json","data","commentFilter","filter","x","netflix_original_id","trending_id","romance_id","top_rated_id","action_id","horror_id","documentary_id","comedy_id","handleUpdate","updatedComment","updated","id","backgroundColor","height","color","width","marginLeft","marginRight","length","map","created_at","format"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useEffect, useState } from 'react'\nimport ReviewLikes from './ReviewLikes'\nimport moment from 'moment'\nimport './Review.css'\n\n\nfunction Reviews({ movieId, category }) {\n\n    const [comment, setComment] = useState([])\n    const [showComments, setShowComments] = useState(false)\n    const [likes, setLikes] = useState(0)\n\n    console.log(movieId)\n\n    const getName = category.split(\"/\").pop().slice(0, -9) + \"_id\"\n    // debugger;\n    console.log(getName)\n    useEffect(() => {\n        fetch(`http://localhost:9292${category}`)\n            .then(resp => resp.json())\n            .then(data => setComment(data))\n        setShowComments(!showComments)\n    }, [])\n    // function handleReviews() {\n    //     fetch(`http://localhost:9292${category}`)\n    //         .then(resp => resp.json())\n    //         .then(data => setComment(data))\n    //     setShowComments(!showComments)\n    // }\n    console.log(comment)\n    let commentFilter\n    if (getName === \"netflix_original_id\") { commentFilter = comment.filter(x => x.netflix_original_id === movieId) }\n    else if (getName === \"trending_id\") { commentFilter = comment.filter(x => x.trending_id === movieId) }\n    else if (getName === \"romance_id\") { commentFilter = comment.filter(x => x.romance_id === movieId) }\n    else if (getName === \"top_rated_id\") { commentFilter = comment.filter(x => x.top_rated_id === movieId) }\n    else if (getName === \"action_id\") { commentFilter = comment.filter(x => x.action_id === movieId) }\n    else if (getName === \"horror_id\") { commentFilter = comment.filter(x => x.horror_id === movieId) }\n    else if (getName === \"documentary_id\") { commentFilter = comment.filter(x => x.documentary_id === movieId) }\n    else if (getName === \"comedy_id\") { commentFilter = comment.filter(x => x.comedy_id === movieId) }\n    // debugger\n\n    function handleUpdate(updatedComment) {\n        const updated = comment.filter(x => x.id === updatedComment.id ? updatedComment : x)\n        setComment(updated)\n    }\n\n    return (\n        <div className=\"shadow\" style={{ backgroundColor: \"white\" }}>\n            {/* <button onClick={handleReviews}>see more</button> */}\n            <h2 className=\"centerText\">Comments</h2>\n            <hr style={{ height: \"5px\", color: \"black\", backgroundColor: \"black\", width: \"50%\", marginLeft: \"25%\", marginRight: \"25% !important\" }}></hr>\n            <br />\n\n            {commentFilter.length == 0 ? <h4 className=\"centerText\">No comments on this yet!! </h4> : commentFilter.map((x) => {\n                return <div className=\"shadow\">\n                    <p className=\"centerText\" key={x.id}><h5>Anonymous-</h5> <i>{x.comment}</i></p>\n                    <h5 className=\"centerText\">{moment(x.created_at).format('MMMM Do YYYY')}{\" \"}</h5>\n                    <ReviewLikes comment={x} onUpdate={handleUpdate} category={category} />\n                </div>\n            })}\n        </div>\n    )\n}\n\nexport default Reviews\n"]},"metadata":{},"sourceType":"module"}